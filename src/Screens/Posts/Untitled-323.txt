import React, { Component } from 'react';
import { TextInput,View, StyleSheet,Dimensions, TouchableOpacity,FlatList,ActivityIndicator } from 'react-native';
import { Container,Card,CardItem, Content,ListItem, Header,Text, Left, Body, Right, Title, Button,Icon,Fab } from 'native-base';
import  Splashscreen   from 'react-native-splash-screen';
import Feather from 'react-native-vector-icons/Feather';
const { height,width } = Dimensions.get('window');
const deviceWidth=width;
const deviceHeight=height;

export default class HeaderTitleExample extends Component {
     constructor() {
        super();
        Splashscreen.hide();
        this.state = {
            active:false,
            postsData: [],
            page: 0,
            isLoading: false,
            showcheckmark: false,
            RadioSelectId: "",
        }
        // this.page = 1;
    }
    componentDidMount() {
        this.setState({ isLoading: true }, this.getDataByPage)
        //;
    }
    getDataByPage = async () => {
                //https://hn.algolia.com/api/v1/search_by_date?tags=story&page=1 responsejson.hits[0].title
//https://jsonplaceholder.typicode.com/photos?_limit=10&_page=
        const url = 'https://hn.algolia.com/api/v1/search_by_date?tags=story&page=' + this.state.page;
        fetch(url).then((response) => response.json())
            .then((responsejson) => {
               // alert("data"+responsejson)
                this.setState({ postsData: [...this.state.postsData, ...responsejson.hits], isLoading: false })
            })
    }
    settext(value) {

        this.setState({ RadioSelectId: value, showcheckmark: true });

    }
    listFooter = () => {

        return (
            this.state.isLoading ? <View style={styles.loader}>
                <ActivityIndicator size='large' />
            </View> : null
        )
    }
    renderRow = ({ item }) => {
        return (
            <View>
                {/* <Image style={styles.itemImage}
                    source={{ uri: item.url }} />
                <Text style={styles.itemText}>{item.id}</Text> */}
       {/* <TouchableOpacity style={{
           borderRadius:6,
           shadowColor: "#000",
shadowOffset: {
	width: 0,
	height: 2,
},
shadowOpacity: 0.30,
shadowRadius: 1.65,

elevation: 4}}>

           
              <Text>Title:{item.title}</Text>
                <Text>URL:{item.url}</Text>
                <Text>Created At:{item.created_at}</Text>
                <Text>Author: {item.author}</Text>
             
    
     
            
                
             
           </TouchableOpacity> */}


 <View style={styles.card}>
      <View style={styles.cardContent}>

      <Text style={{color:'#343434'}}>Title: <Text color={{color:'#000', fontWeight:'400'}}>{item.title}</Text></Text>
                <Text style={{color:'#343434'}}> URL: <Text>{item.url}</Text></Text>
                <Text style={{color:'#343434'}}>Created At: <Text>{item.created_at}</Text></Text>
                <Text style={{color:'#343434'}}>Author: <Text>{item.author}</Text></Text>
      </View>
    </View>

                {/* <ListItem
                    button
                    style={{ height: 90 }}
                    onPress={() => this.settext(item.title)}
                >
                    <Body>
                        <Text style={{ color: "#000" }}>
                            {item.title}
                        </Text>
                        <Text style={{ color: "#777" }}>
                            {item.url}
                        </Text>
                    </Body>
                    <Right>
                       
                    </Right>
                </ListItem> */}
            </View>
        )
    }
    handleMore = async () => {
        //  this.page = this.page + 1;
        if (this.state.page <= 7) {
            this.setState({ isLoading: true, page: this.state.page + 1 }, this.getDataByPage);
        } else {
            this.setState({
                isLoading: false
            });
        }
    }
    handleSearch(text){
        alert(text)
    }
    

    render() {
        return (
            <Container>
                <Header style={{backgroundColor:'#fff'}}>
                    <Left><Title style={{color:'#000'}}>Posts</Title></Left>
                    <Body />
                    <Right />
                </Header>
                <View style={{flex:0.25, marginHorizontal:10}}>
                <View style={{ flex: 3,height:deviceHeight/6, flexDirection: "row",alignItems:'center', justifyContent:'center' }}>
                            <View style={{ flex: 3 }}>
                           
                                <TextInput
                                    style={styles.textInput}
                                    underlineColorAndroid={'transparent'}
                                    editable
                                    returnKeyType='Search by Url or Author'
                                    blurOnSubmit={false}
                                    placeholder={'Search'}
                                    placeholderTextColor={"#777777"}
                                    onChangeText={this.handleSearch}
                                    selectionColor={"#777777"}
                                />
                                
                            </View>
                            <View style={{ flex: 1.2,paddingVertical:5, height:10, alignItems:'center', justifyContent:'center' }}>
                        <Button primary><Text> SEARCH </Text></Button>
                        </View>
                           
                        </View>
                        <View style={{flex:1}}/>
                        <View style={{ flex: 0.1,paddingVertical:5, height:3, alignItems:'center', justifyContent:'center' }}>
                        <Button primary><Text> REFERESH </Text></Button>
                        </View>
                        <View style={{flex:1}}/>
                </View>
               
                    <View style={{ flex: 1 }}>
                    
                        <View style={{ flex: 4 }}>
                        <FlatList
                        style={styles.listContainer}
                        data={this.state.postsData}
                       // extraData={this.state.RadioSelectId}
                        renderItem={this.renderRow}
                        keyExtractor={(item, index) => index.toString()}
                        onEndReached={this.handleMore.bind(this)}
                        onEndReachedThreshold={0.5}
                        ListFooterComponent={this.listFooter}
                    />
                        </View>
                    </View>
               
                <Fab
            active={this.state.active}
            //direction="up"
            containerStyle={{ }}
            style={{ backgroundColor: '#5067FF' }}
            position="bottomRight"
            onPress={() => this.setState({ active: !this.state.active })}>
            <Feather name="filter" />
          </Fab>
            </Container>
        );
    }
}

const styles = StyleSheet.create({
    container: {
        paddingTop: 23
    },
    listContainer:{
      //  backgroundColor:'#fff',
        padding:3
    },
    loader: {
        marginTop: 10,
        alignItems: 'center'
    },
    textInput: {
        paddingHorizontal: 5,
        flex: 1,
        borderColor:'#696969',
        borderWidth:1.5,
        borderRadius:8,
        color: "#000",
        height: 10,
        fontSize: 16,

    },
    card: {
        borderRadius: 6,
        elevation: 3,
        backgroundColor: '#fff',
        shadowOffset: { width: 1, height: 1 },
        shadowColor: '#333',
        shadowOpacity: 0.3,
        shadowRadius: 2,
        marginHorizontal: 4,
        marginVertical: 6,
      },
      cardContent: {
        marginHorizontal: 18,
        marginVertical: 20,
      },
    input: {
        margin: 15,
        height: 40,
        borderColor: '#7a42f4',
        borderWidth: 1
    },
    
    submitButton: {
        backgroundColor: '#7a42f4',
        padding: 10,
        margin: 15,
        height: 40,
    },
    submitButtonText: {
        color: 'white'
    }
})